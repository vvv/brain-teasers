Задача 1: Есть список чисел, элементы в который могут добавляться или
удаляться. Числа уникальные. К списку делаются запросы на выборку
"страницы" чисел. Страница - диапазон последовательно идущих чисел,
отсортированных в нисходящем порядке (первый элемент первой страницы -
самое большое число в списке). Страницы имеют фиксированный размер
(например, кратный 25 - 25, 50, 100, ...), за исключением случая,
когда элементов недостаточно для формирования целой страницы
(например: при выборке по 25 из списка размером в 80 элементов
последняя страница будет содержать только 5 элементов). Необходимо
реализовать структуру хранения списка на диске и алгоритмы добавления
элемента, удаления элемента и выборки нужной страницы, работающие
эффективней O(N). Для выборки идеальный результат - O(1) для любой
страницы списка, допустимый - O(1) только для нескольких первых и
последних страниц.

Задача 2: Необходимо реализовать простейший аналог memcached: сетевой
сервис, понимающий следующие команды: set(key,value) (с возможностью
задать срок хранения записи в секундах), get(key), delete(key). Данные
хранить в файле, использование для этого сторонних библиотек типа
Tokyo Cabinet допускается. По сигналу USR1 создавать в /tmp файл с
текстовым списком записей. Дополнительные баллы считаются за
абстрагирование слоя хранения (например, возможность заменить хранение
в файле на хранение в sql-базе).
